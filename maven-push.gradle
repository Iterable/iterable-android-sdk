/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.gradleup.nmcp'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

def isReleaseBuild() {
    return libraryVersion.contains("SNAPSHOT") == false
}

// Set the project version
project.version = libraryVersion

// Simple property lookup: local.properties first, then project properties (from ORG_GRADLE_PROJECT_* env vars)
def keyID = properties.getProperty("signing.keyId") ?: findProperty('SIGNING_KEY_ID')
def signing_password = properties.getProperty("signing.password") ?: findProperty('SIGNING_PASSWORD')
def keyRingLocation = properties.getProperty("signing.secretKeyRingFile") ?: findProperty('SIGNING_SECRET_KEY_RING_FILE')
def sonatype_username = properties.getProperty("SONATYPE_USERNAME") ?: findProperty('SONATYPE_USERNAME')
def sonatype_password = properties.getProperty("SONATYPE_PASSWORD") ?: findProperty('SONATYPE_PASSWORD')

ext."signing.keyId" = keyID
ext."signing.password" = signing_password

// Set secretKeyRingFile if provided
if (keyRingLocation) {
    ext."signing.secretKeyRingFile" = keyRingLocation
}

publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                groupId = GROUP
                artifactId = libraryName
                version = libraryVersion
                from components.release
            }

            pom {
                name = libraryName
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL

                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}

signing {
    required { isReleaseBuild() && keyID }
    sign publishing.publications.release
}

nmcp {
    publishAllPublications {
        username = sonatype_username
        password = sonatype_password
        publicationType = "AUTOMATIC"
    }
}
